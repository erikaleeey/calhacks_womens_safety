{"version":3,"names":["addListener","EventTarget","Event","defineEventAttribute","toByteArray","LiveKitModule","log","MediaRecorder","constructor","stream","_defineProperty","undefined","registerListener","audioTracks","getAudioTracks","length","mediaStreamTrack","peerConnectionId","_peerConnectionId","mediaStreamTrackId","id","_reactTag","createAudioSinkListener","event","state","str","data","_parts","push","unregisterListener","error","deleteAudioSinkListener","pause","dispatchEvent","resume","start","stop","dispatchData","requestData","combinedStr","reduce","sum","cur","BlobEvent","byteArray","type","eventInitDict","proto","prototype"],"sources":["MediaRecorder.ts"],"sourcesContent":["import type { MediaStream } from '@livekit/react-native-webrtc';\nimport { addListener } from '../events/EventEmitter';\nimport {\n  EventTarget,\n  Event,\n  defineEventAttribute,\n} from 'event-target-shim/index';\nimport { toByteArray } from 'react-native-quick-base64';\nimport LiveKitModule from '../LKNativeModule';\nimport { log } from '../logger';\n\n// typeof MediaRecorder\n// const Tester = (stream: MediaStream) => {\n//   return new AudioRecorder(stream) satisfies MediaRecorder;\n// };\n\ntype MediaRecorderState = 'inactive' | 'recording' | 'paused';\ntype MediaRecorderEventMap = {\n  dataavailable: BlobEvent<'dataavailable'>;\n  error: Event<'error'>;\n  pause: Event<'pause'>;\n  resume: Event<'resume'>;\n  start: Event<'start'>;\n  stop: Event<'stop'>;\n};\n\n/**\n * A MediaRecord implementation only meant for recording audio streams.\n *\n * @private\n */\nexport class MediaRecorder extends EventTarget<MediaRecorderEventMap> {\n  mimeType: String = 'audio/pcm';\n  audioBitsPerSecond: number = 0; // TODO?\n  state: MediaRecorderState = 'inactive';\n  stream: MediaStream;\n  videoBitsPerSecond: number = 0; // TODO?\n  audioBitrateMode = 'constant';\n\n  _reactTag: string | undefined = undefined;\n  _parts: string[] = [];\n  constructor(stream: MediaStream) {\n    super();\n    this.stream = stream;\n  }\n\n  registerListener() {\n    let audioTracks = this.stream.getAudioTracks();\n    if (audioTracks.length !== 1) {\n      return;\n    }\n    const mediaStreamTrack = audioTracks[0];\n    const peerConnectionId = mediaStreamTrack._peerConnectionId ?? -1;\n    const mediaStreamTrackId = mediaStreamTrack?.id;\n    this._reactTag = LiveKitModule.createAudioSinkListener(\n      peerConnectionId,\n      mediaStreamTrackId\n    );\n    addListener(this, 'LK_AUDIO_DATA', (event: any) => {\n      if (\n        this._reactTag &&\n        event.id === this._reactTag &&\n        this.state === 'recording'\n      ) {\n        let str = event.data as string;\n        this._parts.push(str);\n      }\n    });\n  }\n\n  unregisterListener() {\n    if (this._reactTag) {\n      let audioTracks = this.stream.getAudioTracks();\n      if (audioTracks.length !== 1) {\n        log.error(\"couldn't find any audio tracks to record from!\");\n        return;\n      }\n      const mediaStreamTrack = audioTracks[0];\n      const peerConnectionId = mediaStreamTrack._peerConnectionId ?? -1;\n      const mediaStreamTrackId = mediaStreamTrack?.id;\n\n      LiveKitModule.deleteAudioSinkListener(\n        this._reactTag,\n        peerConnectionId,\n        mediaStreamTrackId\n      );\n    }\n  }\n\n  pause() {\n    this.state = 'paused';\n    this.dispatchEvent(new Event('pause'));\n  }\n\n  resume() {\n    this.state = 'recording';\n    this.dispatchEvent(new Event('resume'));\n  }\n\n  start() {\n    this.registerListener();\n    this.state = 'recording';\n    this.dispatchEvent(new Event('start'));\n  }\n\n  stop() {\n    // dispatch data must come before stopping.\n    this.dispatchData();\n\n    this.unregisterListener();\n    this.state = 'inactive';\n    this.dispatchEvent(new Event('stop'));\n  }\n\n  requestData() {\n    this.dispatchData();\n  }\n  dispatchData() {\n    let combinedStr = this._parts.reduce((sum, cur) => sum + cur, '');\n    let data = toByteArray(combinedStr);\n    this._parts = [];\n    this.dispatchEvent(\n      new BlobEvent('dataavailable', { data: { byteArray: data } })\n    );\n  }\n}\n\n/**\n * @eventClass\n * This event is fired whenever the Track is changed in PeerConnection.\n * @param {TRACK_EVENTS} type - The type of event.\n * @param {IRTCTrackEventInitDict} eventInitDict - The event init properties.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/track_event MDN} for details.\n */\nclass BlobEvent<TEventType extends string> extends Event<TEventType> {\n  /** @eventProperty */\n  readonly data: { byteArray: Uint8Array };\n\n  constructor(\n    type: TEventType,\n    eventInitDict: { data: { byteArray: Uint8Array } } & Event.EventInit\n  ) {\n    super(type, eventInitDict);\n    this.data = eventInitDict.data;\n  }\n}\n\n/**\n * Define the `onxxx` event handlers.\n */\nconst proto = MediaRecorder.prototype;\n\ndefineEventAttribute(proto, 'dataavailable');\ndefineEventAttribute(proto, 'error');\ndefineEventAttribute(proto, 'pause');\ndefineEventAttribute(proto, 'resume');\ndefineEventAttribute(proto, 'start');\ndefineEventAttribute(proto, 'stop');\n"],"mappings":"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","ignoreList":[]}